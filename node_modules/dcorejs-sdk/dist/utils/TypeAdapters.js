"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var _ = require("lodash");
var Long = require("long");
var moment = require("moment");
var Address_1 = require("../crypto/Address");
var ChainObject_1 = require("../models/ChainObject");
function ChainObjectToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return ChainObject_1.ChainObject.parse(value); }, { toClassOnly: true })(target, key);
}
exports.ChainObjectToClass = ChainObjectToClass;
function ChainObjectToPlain(target, key) {
    return class_transformer_1.Transform(function (value) { return value.objectId; }, { toPlainOnly: true })(target, key);
}
exports.ChainObjectToPlain = ChainObjectToPlain;
function ChainObjectArrayToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return value.map(function (id) { return ChainObject_1.ChainObject.parse(id); }); }, { toClassOnly: true })(target, key);
}
exports.ChainObjectArrayToClass = ChainObjectArrayToClass;
function ChainObjectArrayToPlain(target, key) {
    return class_transformer_1.Transform(function (value) { return value.map(function (id) { return id.objectId; }); }, { toPlainOnly: true })(target, key);
}
exports.ChainObjectArrayToPlain = ChainObjectArrayToPlain;
function LongToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return Long.fromValue(value).toUnsigned(); }, { toClassOnly: true })(target, key);
}
exports.LongToClass = LongToClass;
function LongToPlain(target, key) {
    return class_transformer_1.Transform(function (value) { return Long.fromBits(value.low, value.high, value.unsigned).toString(); }, { toPlainOnly: true })(target, key);
}
exports.LongToPlain = LongToPlain;
function MomentToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return moment.utc(value); }, { toClassOnly: true })(target, key);
}
exports.MomentToClass = MomentToClass;
function MomentToPlain(target, key) {
    return class_transformer_1.Transform(function (value, obj) {
        return _.get(obj, key).utc().format(TypeAdapters.TIMESTAMP_FORMAT);
    }, { toPlainOnly: true })(target, key);
}
exports.MomentToPlain = MomentToPlain;
function AddressToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return Address_1.Address.parse(value); }, { toClassOnly: true })(target, key);
}
exports.AddressToClass = AddressToClass;
function AddressToPlain(target, key) {
    return class_transformer_1.Transform(function (value) { return _.isNil(value) ? value : value.encoded; }, { toPlainOnly: true })(target, key);
}
exports.AddressToPlain = AddressToPlain;
function CoAuthorsToClass(target, key) {
    return class_transformer_1.Transform(function (value) { return value.map(function (_a) {
        var id = _a[0], weight = _a[1];
        return [ChainObject_1.ChainObject.parse(id), weight];
    }); }, { toClassOnly: true })(target, key);
}
exports.CoAuthorsToClass = CoAuthorsToClass;
function CoAuthorsToPlain(target, key) {
    return class_transformer_1.Transform(function (value, obj) {
        return _.get(obj, key).map(function (_a) {
            var id = _a[0], weight = _a[1];
            return [id.objectId, weight];
        });
    }, { toPlainOnly: true })(target, key);
}
exports.CoAuthorsToPlain = CoAuthorsToPlain;
var TypeAdapters = /** @class */ (function () {
    function TypeAdapters() {
    }
    TypeAdapters.TIMESTAMP_FORMAT = "YYYY-MM-DDTHH:mm:ss";
    return TypeAdapters;
}());
exports.TypeAdapters = TypeAdapters;
//# sourceMappingURL=TypeAdapters.js.map