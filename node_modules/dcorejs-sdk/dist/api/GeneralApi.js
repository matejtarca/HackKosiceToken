"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var GetChainId_1 = require("../net/models/request/GetChainId");
var GetChainProperties_1 = require("../net/models/request/GetChainProperties");
var GetConfig_1 = require("../net/models/request/GetConfig");
var GetDynamicGlobalProps_1 = require("../net/models/request/GetDynamicGlobalProps");
var GetGlobalProperties_1 = require("../net/models/request/GetGlobalProperties");
var GetTimeToMaintenance_1 = require("../net/models/request/GetTimeToMaintenance");
var BaseApi_1 = require("./BaseApi");
var GeneralApi = /** @class */ (function (_super) {
    __extends(GeneralApi, _super);
    function GeneralApi(api) {
        return _super.call(this, api) || this;
    }
    /**
     * Retrieve properties associated with the chain.
     *
     * @return chain id and immutable chain parameters
     */
    GeneralApi.prototype.getChainProperties = function () {
        return this.request(new GetChainProperties_1.GetChainProperties());
    };
    /**
     * Retrieve global properties. This object contains all of the properties of the blockchain that are fixed
     * or that change only once per maintenance interval such as the current list of miners, block interval, etc.
     *
     * @return global property object
     */
    GeneralApi.prototype.getGlobalProperties = function () {
        return this.request(new GetGlobalProperties_1.GetGlobalProperties());
    };
    /**
     * Retrieve compile-time constants.
     *
     * @return configured constants
     */
    GeneralApi.prototype.getConfig = function () {
        return this.request(new GetConfig_1.GetConfig());
    };
    /**
     * Get the chain ID.
     *
     * @return the chain ID identifying blockchain network
     */
    GeneralApi.prototype.getChainId = function () {
        return this.request(new GetChainId_1.GetChainId());
    };
    /**
     * Retrieve the dynamic properties. The returned object contains information that changes every block interval,
     * such as the head block number, the next miner, etc.
     *
     * @return dynamic property object
     */
    GeneralApi.prototype.getDynamicGlobalProperties = function () {
        return this.request(new GetDynamicGlobalProps_1.GetDynamicGlobalProps());
    };
    /**
     * Get remaining time to next maintenance interval from given time.
     *
     * @param time reference time
     *
     * @return remaining time to next maintenance interval along with some additional data
     */
    GeneralApi.prototype.getTimeToMaintenance = function (time) {
        return this.request(new GetTimeToMaintenance_1.GetTimeToMaintenance(time));
    };
    return GeneralApi;
}(BaseApi_1.BaseApi));
exports.GeneralApi = GeneralApi;
//# sourceMappingURL=GeneralApi.js.map