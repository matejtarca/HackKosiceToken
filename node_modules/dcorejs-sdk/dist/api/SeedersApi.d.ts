import { Observable } from "rxjs";
import { DCoreApi } from "../DCoreApi";
import { ChainObject } from "../models/ChainObject";
import { Regions } from "../models/Regions";
import { Seeder } from "../models/Seeder";
import { BaseApi } from "./BaseApi";
export declare class SeedersApi extends BaseApi {
    constructor(api: DCoreApi);
    /**
     * Get a seeder by ID.
     * @param accountId seeder account object id
     *
     * @return a seeder object or {@link ObjectNotFoundError} if not found
     */
    get(accountId: ChainObject): Observable<Seeder>;
    /**
     * Get a list of seeders by price, in increasing order.
     *
     * @param count number of items to retrieve, max 100
     *
     * @return a list of seeders
     */
    listByPrice(count?: number): Observable<Seeder[]>;
    /**
     * Get a list of seeders ordered by total upload, in decreasing order.
     *
     * @param count number of items to retrieve, max 100
     *
     * @return a list of seeders
     */
    listByUpload(count?: number): Observable<Seeder[]>;
    /**
     * Get a list of seeders ordered by price.
     *
     * @param region defined in {@link Regions}
     *
     * @return a list of seeders
     */
    listByRegion(region?: Regions): Observable<Seeder[]>;
    /**
     * Get a list of seeders by price, in decreasing order.
     *
     * @param count number of items to retrieve, max 100
     *
     * @return a list of seeders
     */
    listByRating(count?: number): Observable<Seeder[]>;
}
