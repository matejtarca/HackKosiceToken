import * as Long from "long";
import { Moment } from "moment";
import { Observable } from "rxjs";
import { DCoreApi } from "../DCoreApi";
import { BlockHeader } from "../models/BlockHeader";
import { SignedBlock } from "../models/SignedBlock";
import { BaseApi } from "./BaseApi";
export declare class BlockApi extends BaseApi {
    constructor(api: DCoreApi);
    /**
     * Retrieve a full, signed block.
     *
     * @param blockNum height of the block to be returned
     *
     * @return the referenced block, or {@link ObjectNotFoundError} if no matching block was found
     */
    get(blockNum: Long): Observable<SignedBlock>;
    /**
     * Retrieve a block header.
     *
     * @param blockNum height of the block whose header should be returned
     *
     * @return header of the referenced block, or {@link ObjectNotFoundError} if no matching block was found
     */
    getHeader(blockNum: Long): Observable<BlockHeader>;
    /**
     * Query the last local block.
     *
     * @return the block time
     */
    getHeadTime(): Observable<Moment>;
}
