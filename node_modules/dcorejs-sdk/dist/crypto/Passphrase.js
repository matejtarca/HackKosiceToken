"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utils_1 = require("../utils/Utils");
var SeedDictionary_1 = require("./dictionaries/SeedDictionary");
var Passphrase = /** @class */ (function () {
    function Passphrase(entropy, seed, count) {
        this.words = this.create(entropy, seed, count);
    }
    Passphrase.generate = function (count) {
        if (count === void 0) { count = Passphrase.WORD_COUNT; }
        return new Passphrase(Utils_1.Utils.generateEntropy(), SeedDictionary_1.SeedDictionary.default, count);
    };
    Passphrase.prototype.toString = function () {
        return this.words.join(" ").trim().split(/[\t\n\v\f\r ]+/).join(" ");
    };
    Passphrase.prototype.create = function (entropy, seed, count) {
        var end = count * 2;
        var phrases = [];
        for (var i = 0; i < end; i += 2) {
            // randomBuffer has 256 bits / 16 bits per word == 16 words
            // tslint:disable-next-line:no-bitwise
            var num = (entropy[i] << 8) + entropy[i + 1];
            // convert into a number between 0 and 1 (inclusive)
            var multiplier = num / Math.pow(2, 16);
            var index = Math.round(seed.length * multiplier);
            phrases.push(seed[index]);
        }
        return phrases;
    };
    Passphrase.WORD_COUNT = 16;
    return Passphrase;
}());
exports.Passphrase = Passphrase;
//# sourceMappingURL=Passphrase.js.map