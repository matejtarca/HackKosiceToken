import { Duration } from "moment";
import { Observable } from "rxjs";
import { AccountApi } from "./api/AccountApi";
import { AssetApi } from "./api/AssetApi";
import { AuthorityApi } from "./api/AuthorityApi";
import { BalanceApi } from "./api/BalanceApi";
import { BlockApi } from "./api/BlockApi";
import { BroadcastApi } from "./api/BroadcastApi";
import { CallbackApi } from "./api/CallbackApi";
import { ContentApi } from "./api/ContentApi";
import { GeneralApi } from "./api/GeneralApi";
import { HistoryApi } from "./api/HistoryApi";
import { MessageApi } from "./api/MessageApi";
import { MiningApi } from "./api/MiningApi";
import { PurchaseApi } from "./api/PurchaseApi";
import { SeedersApi } from "./api/SeedersApi";
import { SubscriptionApi } from "./api/SubscriptionApi";
import { TransactionApi } from "./api/TransactionApi";
import { ValidationApi } from "./api/ValidationApi";
import { DCoreSdk } from "./DCoreSdk";
import { BaseRequest } from "./net/models/request/BaseRequest";
import { WithCallback } from "./net/models/request/WithCallback";
export declare class DCoreApi {
    private core;
    transactionExpiration: Duration;
    accountApi: AccountApi;
    assetApi: AssetApi;
    authorityApi: AuthorityApi;
    balanceApi: BalanceApi;
    blockApi: BlockApi;
    broadcastApi: BroadcastApi;
    callbackApi: CallbackApi;
    contentApi: ContentApi;
    generalApi: GeneralApi;
    historyApi: HistoryApi;
    messageApi: MessageApi;
    miningApi: MiningApi;
    purchaseApi: PurchaseApi;
    seedersApi: SeedersApi;
    subscriptionApi: SubscriptionApi;
    transactionApi: TransactionApi;
    validationApi: ValidationApi;
    constructor(core: DCoreSdk);
    request<T>(request: BaseRequest<T>): Observable<T>;
    requestStream<T>(request: BaseRequest<T> & WithCallback): Observable<T>;
    disconnect(): void;
    timeout: number;
}
