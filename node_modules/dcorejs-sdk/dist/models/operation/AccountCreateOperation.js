"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var TypeAdapters_1 = require("../../utils/TypeAdapters");
var Authority_1 = require("../Authority");
var ChainObject_1 = require("../ChainObject");
var Options_1 = require("../Options");
var BaseOperation_1 = require("./BaseOperation");
var OperationType_1 = require("./OperationType");
var AccountCreateOperation = /** @class */ (function (_super) {
    __extends(AccountCreateOperation, _super);
    /**
     * Request to create account operation constructor
     *
     * @param registrar registrar
     * @param name account name
     * @param owner owner authority
     * @param active active authority
     * @param options account options
     * @param fee {@link AssetAmount} fee for the operation, if left undefined the fee will be computed in DCT asset
     */
    function AccountCreateOperation(registrar, name, owner, active, options, fee) {
        var _this = _super.call(this, OperationType_1.OperationType.AccountCreate) || this;
        _this.registrar = registrar;
        _this.name = name;
        _this.owner = owner;
        _this.active = active;
        _this.options = options;
        _this.fee = fee;
        return _this;
    }
    AccountCreateOperation.create = function (registrar, name, publicKey, fee) {
        return new this(registrar, name, new Authority_1.Authority(publicKey), new Authority_1.Authority(publicKey), new Options_1.Options(publicKey), fee);
    };
    __decorate([
        TypeAdapters_1.ChainObjectToClass,
        TypeAdapters_1.ChainObjectToPlain,
        class_transformer_1.Expose({ name: "registrar" }),
        __metadata("design:type", ChainObject_1.ChainObject)
    ], AccountCreateOperation.prototype, "registrar", void 0);
    __decorate([
        class_transformer_1.Expose({ name: "name" }),
        __metadata("design:type", String)
    ], AccountCreateOperation.prototype, "name", void 0);
    __decorate([
        class_transformer_1.Type(function () { return Authority_1.Authority; }),
        class_transformer_1.Expose({ name: "owner" }),
        __metadata("design:type", Authority_1.Authority)
    ], AccountCreateOperation.prototype, "owner", void 0);
    __decorate([
        class_transformer_1.Type(function () { return Authority_1.Authority; }),
        class_transformer_1.Expose({ name: "active" }),
        __metadata("design:type", Authority_1.Authority)
    ], AccountCreateOperation.prototype, "active", void 0);
    __decorate([
        class_transformer_1.Type(function () { return Options_1.Options; }),
        class_transformer_1.Expose({ name: "options" }),
        __metadata("design:type", Options_1.Options)
    ], AccountCreateOperation.prototype, "options", void 0);
    return AccountCreateOperation;
}(BaseOperation_1.BaseOperation));
exports.AccountCreateOperation = AccountCreateOperation;
//# sourceMappingURL=AccountCreateOperation.js.map