import { Address } from "../../crypto/Address";
import { AssetAmount } from "../AssetAmount";
import { Authority } from "../Authority";
import { ChainObject } from "../ChainObject";
import { Options } from "../Options";
import { BaseOperation } from "./BaseOperation";
export declare class AccountCreateOperation extends BaseOperation {
    static create(registrar: ChainObject, name: string, publicKey: Address, fee?: AssetAmount): AccountCreateOperation;
    registrar: ChainObject;
    name: string;
    owner: Authority;
    active: Authority;
    options: Options;
    /**
     * Request to create account operation constructor
     *
     * @param registrar registrar
     * @param name account name
     * @param owner owner authority
     * @param active active authority
     * @param options account options
     * @param fee {@link AssetAmount} fee for the operation, if left undefined the fee will be computed in DCT asset
     */
    constructor(registrar: ChainObject, name: string, owner: Authority, active: Authority, options: Options, fee?: AssetAmount);
}
