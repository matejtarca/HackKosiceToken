import { Account } from "../Account";
import { AssetAmount } from "../AssetAmount";
import { Authority } from "../Authority";
import { ChainObject } from "../ChainObject";
import { Options } from "../Options";
import { VoteId } from "../VoteId";
import { BaseOperation } from "./BaseOperation";
export declare class AccountUpdateOperation extends BaseOperation {
    static create(account: Account, votes: VoteId[]): AccountUpdateOperation;
    accountId: ChainObject;
    owner?: Authority;
    active?: Authority;
    options?: Options;
    /**
     * Request to account update operation constructor
     *
     * @param accountId account
     * @param owner owner authority
     * @param active active authority
     * @param options account options
     * @param fee {@link AssetAmount} fee for the operation, if left undefined the fee will be computed in DCT asset
     */
    constructor(accountId: ChainObject, owner?: Authority, active?: Authority, options?: Options, fee?: AssetAmount);
}
