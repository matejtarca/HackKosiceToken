"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var TypeAdapters_1 = require("../../utils/TypeAdapters");
var ChainObject_1 = require("../ChainObject");
var BaseOperation_1 = require("./BaseOperation");
var OperationType_1 = require("./OperationType");
var CustomOperation = /** @class */ (function (_super) {
    __extends(CustomOperation, _super);
    /**
     * Custom operation
     *
     * @param type custom operation subtype
     * @param payer account which pays for the fee
     * @param requiredAuths accounts required to authorize this operation with signatures
     * @param data data payload encoded in hex string
     * @param fee {@link AssetAmount} fee for the operation, if left undefined the fee will be computed in DCT asset
     */
    function CustomOperation(type, payer, requiredAuths, data, fee) {
        var _this = _super.call(this, OperationType_1.OperationType.Custom) || this;
        _this.payer = payer;
        _this.requiredAuths = requiredAuths;
        _this.data = data;
        _this.id = type;
        _this.fee = fee;
        return _this;
    }
    __decorate([
        TypeAdapters_1.ChainObjectToClass,
        TypeAdapters_1.ChainObjectToPlain,
        class_transformer_1.Expose({ name: "payer" }),
        __metadata("design:type", ChainObject_1.ChainObject)
    ], CustomOperation.prototype, "payer", void 0);
    __decorate([
        TypeAdapters_1.ChainObjectArrayToClass,
        TypeAdapters_1.ChainObjectArrayToPlain,
        class_transformer_1.Expose({ name: "required_auths" }),
        __metadata("design:type", Array)
    ], CustomOperation.prototype, "requiredAuths", void 0);
    __decorate([
        class_transformer_1.Expose({ name: "data" }),
        __metadata("design:type", String)
    ], CustomOperation.prototype, "data", void 0);
    __decorate([
        class_transformer_1.Expose({ name: "id" }),
        __metadata("design:type", Number)
    ], CustomOperation.prototype, "id", void 0);
    return CustomOperation;
}(BaseOperation_1.BaseOperation));
exports.CustomOperation = CustomOperation;
//# sourceMappingURL=CustomOperation.js.map