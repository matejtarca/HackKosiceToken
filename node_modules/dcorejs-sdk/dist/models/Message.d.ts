import * as Long from "long";
import { Moment } from "moment";
import { Address } from "../crypto/Address";
import { Credentials } from "../crypto/Credentials";
import { ChainObject } from "./ChainObject";
import { MessageResponse } from "./MessageResponse";
export declare class Message {
    operationId: ChainObject;
    timestamp: Moment;
    message: string;
    sender: ChainObject;
    receiver: ChainObject;
    senderAddress?: Address | undefined;
    receiverAddress?: Address | undefined;
    nonce: Long;
    static create(response: MessageResponse): Message[];
    encrypted: boolean;
    constructor(operationId: ChainObject, timestamp: Moment, message: string, sender: ChainObject, receiver: ChainObject, senderAddress?: Address | undefined, receiverAddress?: Address | undefined, nonce?: Long);
    /**
     * Decrypt the message with given credentials
     *
     * @param credentials account credentials
     * @return decrypted message or unchanged message if unable to decrypt with credentials, check the [encrypted] field
     */
    decrypt(credentials: Credentials): Message;
    private decryptOrNull;
}
