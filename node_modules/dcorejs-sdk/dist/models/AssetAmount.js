"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var Long = require("long");
var DCoreConstants_1 = require("../DCoreConstants");
var TypeAdapters_1 = require("../utils/TypeAdapters");
var Utils_1 = require("../utils/Utils");
var ChainObject_1 = require("./ChainObject");
var ObjectType_1 = require("./ObjectType");
var AssetAmount = /** @class */ (function () {
    function AssetAmount(amount, assetId) {
        if (amount === void 0) { amount = Long.ZERO; }
        if (assetId === void 0) { assetId = DCoreConstants_1.DCoreConstants.DCT_ASSET_ID; }
        this.amount = Long.fromValue(amount).toUnsigned();
        this.assetId = assetId;
        Utils_1.assertThrow(this.amount >= Long.ZERO, function () { return "amount must be greater or equal to 0"; });
        Utils_1.assertThrow(this.assetId.objectType === ObjectType_1.ObjectType.Asset, function () { return "object id is not an asset"; });
    }
    __decorate([
        TypeAdapters_1.LongToClass,
        TypeAdapters_1.LongToPlain,
        class_transformer_1.Expose({ name: "amount" }),
        __metadata("design:type", Long)
    ], AssetAmount.prototype, "amount", void 0);
    __decorate([
        TypeAdapters_1.ChainObjectToClass,
        TypeAdapters_1.ChainObjectToPlain,
        class_transformer_1.Expose({ name: "asset_id" }),
        __metadata("design:type", ChainObject_1.ChainObject)
    ], AssetAmount.prototype, "assetId", void 0);
    return AssetAmount;
}());
exports.AssetAmount = AssetAmount;
//# sourceMappingURL=AssetAmount.js.map