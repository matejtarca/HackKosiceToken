import { Decimal } from "decimal.js";
import * as Long from "long";
import { AssetAmount } from "./AssetAmount";
import { AssetOptions } from "./AssetOptions";
import { ChainObject } from "./ChainObject";
export declare class Asset {
    id: ChainObject;
    symbol: string;
    precision: number;
    issuer: ChainObject;
    description: string;
    options: AssetOptions;
    dynamicAssetDataId: ChainObject;
    /**
     * Convert amount in DCT to this asset
     *
     * @param amount amount to convert
     * @param roundingMode rounding mode to use when rounding to target asset precision
     */
    convertFromDCT(amount: Long | number, roundingMode?: Decimal.Rounding): AssetAmount;
    /**
     * Convert amount in this asset to DCT
     *
     * @param amount amount to convert
     * @param roundingMode rounding mode to use when rounding to target asset precision
     */
    convertToDCT(amount: Long | number, roundingMode?: Decimal.Rounding): AssetAmount;
    private convert;
}
