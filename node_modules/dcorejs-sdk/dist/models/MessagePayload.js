"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var Address_1 = require("../crypto/Address");
var TypeAdapters_1 = require("../utils/TypeAdapters");
var ChainObject_1 = require("./ChainObject");
var MessagePayloadReceiver_1 = require("./MessagePayloadReceiver");
var MessagePayload = /** @class */ (function () {
    function MessagePayload(from, receiversData, fromAddress) {
        this.from = from;
        this.receiversData = receiversData;
        this.fromAddress = fromAddress;
    }
    /**
     * unencrypted message payload constructor
     *
     * @param from account id of the sender
     * @param messages pairs of receiver account id to message text
     */
    MessagePayload.createUnencrypted = function (from, messages) {
        return new MessagePayload(from, messages.map(function (_a) {
            var id = _a[0], msg = _a[1];
            return new MessagePayloadReceiver_1.MessagePayloadReceiver(id, msg);
        }));
    };
    __decorate([
        TypeAdapters_1.ChainObjectToClass,
        class_transformer_1.Expose({ name: "from" }),
        __metadata("design:type", ChainObject_1.ChainObject)
    ], MessagePayload.prototype, "from", void 0);
    __decorate([
        class_transformer_1.Type(function () { return MessagePayloadReceiver_1.MessagePayloadReceiver; }),
        class_transformer_1.Expose({ name: "receivers_data" }),
        __metadata("design:type", Array)
    ], MessagePayload.prototype, "receiversData", void 0);
    __decorate([
        TypeAdapters_1.AddressToClass,
        class_transformer_1.Expose({ name: "pub_from" }),
        __metadata("design:type", Address_1.Address)
    ], MessagePayload.prototype, "fromAddress", void 0);
    return MessagePayload;
}());
exports.MessagePayload = MessagePayload;
//# sourceMappingURL=MessagePayload.js.map