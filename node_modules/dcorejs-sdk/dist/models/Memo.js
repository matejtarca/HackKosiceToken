"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var _ = require("lodash/fp");
var Long = require("long");
var Address_1 = require("../crypto/Address");
var TypeAdapters_1 = require("../utils/TypeAdapters");
var Utils_1 = require("../utils/Utils");
var Memo = /** @class */ (function () {
    function Memo(message, from, to, nonce) {
        if (nonce === void 0) { nonce = Long.ZERO; }
        this.from = from;
        this.to = to;
        this.message = message;
        this.nonce = nonce;
    }
    Memo.createPublic = function (message) {
        return new Memo(Buffer.concat([Buffer.alloc(4, 0), Buffer.from(message)]).toString("hex"));
    };
    Memo.createEncrypted = function (message, keyPair, recipient, nonce) {
        if (nonce === void 0) { nonce = Utils_1.Utils.generateNonce(); }
        var msgBytes = Buffer.from(message);
        var withChecksum = Buffer.concat([Utils_1.Utils.hash256(msgBytes).slice(0, 4), msgBytes]);
        var secret = keyPair.secret(recipient, nonce);
        var cipherText = Utils_1.Utils.encrypt(secret, withChecksum);
        return new Memo(cipherText.toString("hex"), keyPair.publicAddress, recipient, nonce);
    };
    Memo.prototype.decrypt = function (keyPair) {
        if (_.isNil(this.from) || _.isNil(this.to)) {
            return Buffer.from(this.message, "hex").slice(4).toString("utf8");
        }
        else if (this.from.publicKey === keyPair.publicKey) {
            return this.decryptWithChecksum(keyPair.secret(this.to, this.nonce));
        }
        else if (this.to.publicKey === keyPair.publicKey) {
            return this.decryptWithChecksum(keyPair.secret(this.from, this.nonce));
        }
        else {
            return "";
        }
    };
    Memo.prototype.decryptWithChecksum = function (secret) {
        var clearText = Utils_1.Utils.decrypt(secret, Buffer.from(this.message, "hex"));
        var msg = clearText.slice(4);
        if (Utils_1.Utils.hash256(msg).slice(0, 4).equals(clearText.slice(0, 4))) {
            return msg.toString("utf8");
        }
        else {
            return "";
        }
    };
    __decorate([
        TypeAdapters_1.AddressToClass,
        TypeAdapters_1.AddressToPlain,
        class_transformer_1.Expose({ name: "from" }),
        __metadata("design:type", Address_1.Address)
    ], Memo.prototype, "from", void 0);
    __decorate([
        TypeAdapters_1.AddressToClass,
        TypeAdapters_1.AddressToPlain,
        class_transformer_1.Expose({ name: "to" }),
        __metadata("design:type", Address_1.Address)
    ], Memo.prototype, "to", void 0);
    __decorate([
        class_transformer_1.Expose({ name: "message" }),
        __metadata("design:type", String)
    ], Memo.prototype, "message", void 0);
    __decorate([
        TypeAdapters_1.LongToClass,
        TypeAdapters_1.LongToPlain,
        class_transformer_1.Expose({ name: "nonce" }),
        __metadata("design:type", Long)
    ], Memo.prototype, "nonce", void 0);
    return Memo;
}());
exports.Memo = Memo;
//# sourceMappingURL=Memo.js.map