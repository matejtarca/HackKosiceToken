"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Account_1 = require("../../../models/Account");
var ChainObject_1 = require("../../../models/ChainObject");
var ObjectType_1 = require("../../../models/ObjectType");
var Utils_1 = require("../../../utils/Utils");
var ApiGroup_1 = require("../ApiGroup");
var BaseRequest_1 = require("./BaseRequest");
var VerifyAccountAuthority = /** @class */ (function (_super) {
    __extends(VerifyAccountAuthority, _super);
    function VerifyAccountAuthority(nameOrId, keys) {
        var _this = _super.call(this, ApiGroup_1.ApiGroup.Database, "verify_account_authority", [nameOrId, keys.map(function (address) { return address.encoded; })]) || this;
        Utils_1.assertThrow((ChainObject_1.ChainObject.isValid(nameOrId) && ChainObject_1.ChainObject.parse(nameOrId).objectType === ObjectType_1.ObjectType.Account)
            || Account_1.Account.isValidName(nameOrId), function () { return "not a valid account object id or name"; });
        return _this;
    }
    return VerifyAccountAuthority;
}(BaseRequest_1.BaseRequest));
exports.VerifyAccountAuthority = VerifyAccountAuthority;
//# sourceMappingURL=VerifyAccountAuthority.js.map