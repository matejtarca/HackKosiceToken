"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var class_transformer_1 = require("class-transformer");
var Account_1 = require("../../../models/Account");
var MinerVotingInfo_1 = require("../../../models/MinerVotingInfo");
var ObjectType_1 = require("../../../models/ObjectType");
var SearchMinerVotingOrder_1 = require("../../../models/order/SearchMinerVotingOrder");
var Utils_1 = require("../../../utils/Utils");
var ApiGroup_1 = require("../ApiGroup");
var BaseRequest_1 = require("./BaseRequest");
var SearchMinerVoting = /** @class */ (function (_super) {
    __extends(SearchMinerVoting, _super);
    function SearchMinerVoting(searchTerm, accountName, onlyMyVotes, order, id, limit) {
        if (onlyMyVotes === void 0) { onlyMyVotes = false; }
        if (order === void 0) { order = SearchMinerVotingOrder_1.SearchMinerVotingOrder.NameDesc; }
        if (limit === void 0) { limit = 1000; }
        var _this = _super.call(this, ApiGroup_1.ApiGroup.Database, "search_miner_voting", [accountName, searchTerm, onlyMyVotes, order, id && id.objectId, limit], function (value) { return class_transformer_1.plainToClass(MinerVotingInfo_1.MinerVotingInfo, value); }) || this;
        Utils_1.assertThrow(id ? (id.objectType === ObjectType_1.ObjectType.Miner) : true, function () { return "not a valid miner object id"; });
        Utils_1.assertThrow(accountName ? Account_1.Account.isValidName(accountName) : true, function () { return "not a valid account name"; });
        return _this;
    }
    return SearchMinerVoting;
}(BaseRequest_1.BaseRequest));
exports.SearchMinerVoting = SearchMinerVoting;
//# sourceMappingURL=SearchMinerVoting.js.map