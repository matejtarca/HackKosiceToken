"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rx_http_request_1 = require("@akanass/rx-http-request");
var _ = require("lodash");
var operators_1 = require("rxjs-spy/operators");
var operators_2 = require("rxjs/operators");
var DCoreError_1 = require("../../models/error/DCoreError");
var ObjectNotFoundError_1 = require("../../models/error/ObjectNotFoundError");
var ObjectCheckOf_1 = require("../../utils/ObjectCheckOf");
var RpcService = /** @class */ (function () {
    function RpcService(options) {
        this.baseRequest = rx_http_request_1.RxHR.defaults(options);
    }
    RpcService.prototype.request = function (request) {
        return this.baseRequest.post("", { body: request.json() }).pipe(operators_2.filter(function (data) { return data.response.statusCode === 200; }), operators_2.map(function (data) { return JSON.parse(data.response.body); }), operators_2.map(function (response) {
            if (ObjectCheckOf_1.ObjectCheckOf(response, "id")) {
                if (!_.isNil(response.error)) {
                    throw new DCoreError_1.DCoreError(response.error);
                }
                if (!_.isNil(response.result)
                    && (!_.isArray(response.result) || response.result.filter(Boolean).length > 0)) {
                    return request.transformer(response.result);
                }
                throw new ObjectNotFoundError_1.ObjectNotFoundError(request.description());
            }
            throw TypeError("invalid response");
        }), operators_1.tag("RpcEndpoints_request"));
    };
    return RpcService;
}());
exports.RpcService = RpcService;
//# sourceMappingURL=RpcService.js.map